<idea-plugin url="https://github.com/JetBrains/intellij-plugins/tree/master/vuejs">
  <!--suppress PluginXmlCapitalization -->
  <name>Vue.js</name>
  <id>com.hxz.mpxjs</id>
  <description><![CDATA[
    Support for <a href="https://mpxjs.cn">Mpx</a> projects.

    <h3>Getting started</h3>

    <ul>
      <li>Open your Mpx project.</li>
      <li>Make sure you have <code>@mpxjs/core</code> listed in your project dependencies in package.json and it is installed.</li>
      <li>Now, you will get Mpx-specific code completion, navigation, and many other features in .mpx files.</li>
    </ul>

    <h3>Features</h3>

    <ul>
      <li>Completion for components, directives, props and methods in templates</li>
      <li>Navigation from the component, directives and event handlers to their definition</li>
      <li>Coding assistance for different languages inside template, script and style tags in .mpx files</li>
      <li>Extract component and rename component refactorings</li>
      <li>Collection of code snippets for Mpx</li>
      <li>Create new projects from the IDE Welcome screen using Mpx CLI</li>
    </ul>


    Learn more about Mpx support in the <a href="https://mpxjs.cn">IDE documentation</a>.
    ]]></description>
  <vendor>wuxianqiang</vendor>
  <category>JavaScript Frameworks and Tools</category>

<!--  <content>-->
<!--    <module name="intellij.vuejs/prettier"/>-->
<!--    <module name="intellij.vuejs/copyright"/>-->
<!--  </content>-->
<!--  <dependencies>-->
<!--    <plugin id="JavaScript"/>-->
<!--    <plugin id="com.intellij.css"/>-->
<!--  </dependencies>-->
<!--  <depends optional="true" config-file="js-debugger.xml">JavaScriptDebugger</depends>-->
  <depends>JavaScript</depends>
  <depends>com.intellij.css</depends>
  <depends>com.intellij.modules.platform</depends>
  <extensionPoints>
    <!--suppress PluginXmlValidity -->
    <extensionPoint qualifiedName="com.intellij.mpxjs.templateScopesProvider"
                    interface="com.hxz.mpxjs.codeInsight.template.VueTemplateScopesProvider"
                    dynamic="true"/>
    <!--suppress DeprecatedClassUsageInspection -->
    <extensionPoint qualifiedName="com.intellij.mpxjs.contextProvider"
                    interface="com.hxz.mpxjs.context.VueContextProvider"
                    dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.mpxjs.containerInfoProvider"
                    interface="com.hxz.mpxjs.model.source.VueContainerInfoProvider"
                    dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <css.embeddedCssProvider implementation="com.hxz.mpxjs.css.VueEmbeddedCssProvider"/>
    <css.inclusionContext implementation="com.hxz.mpxjs.css.VueCssInclusionContext"/>
<!--    <css.elementDescriptorProvider implementation="com.hxz.mpxjs.css.VueCssElementDescriptorProvider"/>-->
    <psi.referenceContributor implementation="com.hxz.mpxjs.css.refs.VueCssReferencesContributor"/>
    <html.attributeValueProvider implementation="com.hxz.mpxjs.codeInsight.attributes.VueCustomAttributeValueProvider"/>
    <fileType name="Vue.js" extensions="vue" language="Vue" implementationClass="com.hxz.mpxjs.lang.html.VueFileType"
              fieldName="INSTANCE"/>
    <lang.parserDefinition language="Vue" implementationClass="com.hxz.mpxjs.lang.html.parser.VueParserDefinition"/>
    <lang.parserDefinition language="VueJS" implementationClass="com.hxz.mpxjs.lang.expr.parser.VueJSParserDefinition"/>
    <typedHandler implementation="com.hxz.mpxjs.editor.VueJSBracesInterpolationTypedHandler"/>
    <lang.braceMatcher language="VueJS" implementationClass="com.intellij.lang.javascript.highlighting.JSBraceMatcher"/>
    <annotator language="VueJS" implementationClass="com.intellij.lang.javascript.validation.JSAnnotator"/>
    <psi.referenceContributor language="JavaScript" implementation="com.hxz.mpxjs.codeInsight.refs.VueJSReferenceContributor"/>
    <psi.referenceContributor language="Vue" implementation="com.hxz.mpxjs.codeInsight.refs.VueReferenceContributor"/>
    <psi.referenceContributor language="JavaScript"
                              implementation="com.hxz.mpxjs.libraries.vuex.codeInsight.refs.VuexReferenceContributor"/>
    <pom.declarationSearcher implementation="com.hxz.mpxjs.codeInsight.refs.VuePomDeclarationSearcher"/>
<!--    <psi.fileReferenceHelper implementation="com.hxz.mpxjs.libraries.nuxt.codeInsight.NuxtFileReferenceHelper"/>-->
    <pathReferenceProvider implementation="com.hxz.mpxjs.libraries.vueLoader.VueLoaderPathReferenceProvider"/>
    <useScopeEnlarger implementation="com.hxz.mpxjs.findUsages.VueUseScopeEnlarger"/>
    <!--suppress PluginXmlValidity -->
    <quoteHandler className="com.intellij.codeInsight.editorActions.HtmlQuoteHandler" fileType="Vue.js"/>

    <lang.syntaxHighlighterFactory language="Vue"
                                   implementationClass="com.hxz.mpxjs.lang.html.highlighting.VueSyntaxHighlighterFactory"/>

    <xml.xmlExtension implementation="com.hxz.mpxjs.codeInsight.VueXmlExtension" order="before web-symbols-react"/>
    <html.embeddedContentSupport implementation="com.hxz.mpxjs.lang.html.lexer.VueEmbeddedContentSupport"/>
    <html.embeddedContentSupport implementation="com.hxz.mpxjs.libraries.i18n.VueI18nEmbeddedContentSupport"/>
<!--    <gotoDeclarationHandler implementation="com.hxz.mpxjs.editor.VueGotoDeclarationHandler"/>-->
    <notificationGroup displayType="BALLOON" id="Vue" icon="com.hxz.mpxjs.VuejsIcons.Vue" isLogByDefault="true"
                       bundle="messages.VueBundle" key="vue.documentation.vue"/>

    <stubIndex implementation="com.hxz.mpxjs.index.VueComponentsIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueOptionsIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueMixinBindingIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueExtendsBindingIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueGlobalDirectivesIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueUrlIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueIdIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueGlobalFiltersIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.libraries.vuex.index.VuexStoreIndex"/>
    <fileBasedIndex implementation="com.hxz.mpxjs.index.VueEmptyComponentInitializersIndex"/>

    <stubElementTypeHolder class="com.hxz.mpxjs.lang.expr.parser.VueJSStubElementTypes"/>
    <stubElementTypeHolder class="com.hxz.mpxjs.lang.html.parser.VueStubElementTypes"/>

    <langCodeStyleSettingsProvider implementation="com.hxz.mpxjs.options.VueCodeStyleSettingsProvider"/>
    <fileIndentOptionsProvider implementation="com.hxz.mpxjs.lang.html.psi.formatter.VueFileIndentOptionsProvider"
                               id="vue" order="before html"/>


    <postStartupActivity implementation="com.hxz.mpxjs.lang.html.psi.arrangement.VueArrangementSettingsMigration"/>

<!--    <directoryIndexExcludePolicy implementation="com.hxz.mpxjs.libraries.nuxt.index.NuxtIndexExcludePolicy"/>-->

<!--    <directoryProjectGenerator-->
<!--      implementation="com.hxz.mpxjs.cli.VueCliProjectGenerator"/>  &lt;!&ndash; works in WebStorm and other SmallIDEs &ndash;&gt;-->
<!--    <projectTemplatesFactory implementation="com.hxz.mpxjs.cli.VueProjectTemplateFactory"/> &lt;!&ndash; works in IntelliJ IDEA &ndash;&gt;-->

    <localInspection language="Vue" groupKey="vue.inspection.group.name" shortName="MpxDataFunction"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.hxz.mpxjs.inspections.DataFunctionInspection"
                     key="vue.inspection.display.name.data.function"
                     bundle="messages.VueBundle"/>
    <localInspection language="Vue" groupKey="vue.inspection.group.name" shortName="MpxDuplicateTag"
                     enabledByDefault="true" level="WARNING"
                     implementationClass="com.hxz.mpxjs.inspections.DuplicateTagInspection"
                     key="vue.inspection.display.name.duplicate.tag" bundle="messages.VueBundle"/>
    <intentionAction>
      <className>com.hxz.mpxjs.intentions.extractComponent.VueExtractComponentIntention</className>
      <category>VueJS</category>
    </intentionAction>
    <intentionAction>
      <className>com.hxz.mpxjs.intentions.expandVModel.VueExpandVModelIntention</className>
      <category>VueJS</category>
    </intentionAction>

    <!--suppress PluginXmlValidity -->
    <multiHostInjector implementation="com.hxz.mpxjs.editor.VueInjector"
                       order="before JSConfigurationInjector, before WebSymbolsHtmlText, after TemporaryPlacesInjector"
                       id="VueInjector"/>

    <internalFileTemplate name="Vue Single File Component"/>
    <createFromTemplateHandler implementation="com.hxz.mpxjs.VueCreateFromTemplateHandler"/>

    <spellchecker.bundledDictionaryProvider implementation="com.hxz.mpxjs.spellchecker.VueSpellcheckingDictionaryProvider"/>
    <spellchecker.support language="Vue" implementationClass="com.hxz.mpxjs.spellchecker.VueSpellcheckingStrategy"/>

<!--    <liveTemplateContext implementation="com.hxz.mpxjs.liveTemplate.VueBaseLiveTemplateContextType"/>-->
<!--    <liveTemplateContext implementation="com.hxz.mpxjs.liveTemplate.VueScriptLiveTemplateContextType"/>-->
<!--    <liveTemplateContext implementation="com.hxz.mpxjs.liveTemplate.VueComponentDescriptorLiveTemplateContextType"/>-->
<!--    <liveTemplateContext implementation="com.hxz.mpxjs.liveTemplate.VueTemplateLiveTemplateContextType"/>-->
<!--    <liveTemplateContext implementation="com.hxz.mpxjs.liveTemplate.VueInsideTagLiveTemplateContextType"/>-->
<!--    <liveTemplateContext implementation="com.hxz.mpxjs.liveTemplate.VueTopLevelLiveTemplateContextType"/>-->
<!--    <defaultLiveTemplates file="liveTemplates/Vue"/>-->
    <renamePsiElementProcessor implementation="com.hxz.mpxjs.refactoring.VueJSComponentRenameProcessor"/>
    <referencesSearch implementation="com.hxz.mpxjs.findUsages.VueJSReferenceSearcher"/>
    <completion.contributor language="any"
                            implementationClass="com.hxz.mpxjs.codeInsight.VueCompletionContributor"
                            id="VueCompletionContributor"
                            order="before JSPatternBasedCompletionContributor, before JSCompletionContributor, before xmlNonFirst, before cssClassOrIdReferenceCompletionContributor"/>
    <completion.contributor language="JavaScript"
                            implementationClass="com.hxz.mpxjs.libraries.vuex.codeInsight.VuexCompletionContributor"
                            id="VuexCompletionContributor"/>
    <typedHandler implementation="com.hxz.mpxjs.codeInsight.completion.VueAutoPopupHandler"/>
    <include.provider implementation="com.hxz.mpxjs.index.VueES6ModuleFileIncludeProvider"/>

    <highlightingPassFactory
      implementation="com.hxz.mpxjs.lang.typescript.service.VueTypeScriptServiceHighlightingPassFactoryRegistrar"/>
    <lang.formatter language="Vue" implementationClass="com.hxz.mpxjs.lang.html.psi.formatter.VueFormattingModelBuilder"/>
    <lang.formatter language="VueJS" implementationClass="com.hxz.mpxjs.lang.expr.psi.formatter.VueJSFormattingModelBuilder"/>
    <lang.rearranger language="Vue" implementationClass="com.hxz.mpxjs.lang.html.psi.arrangement.VueRearranger"/>
    <multiLangCommenter implementation="com.hxz.mpxjs.editor.VueCommenterProvider"/>

    <lang.syntaxHighlighterFactory language="VueJS"
                                   implementationClass="com.hxz.mpxjs.lang.expr.highlighting.VueJSHighlighterFactory"/>
    <idIndexer filetype="Vue" implementationClass="com.hxz.mpxjs.lang.html.index.VueIdIndexer"/>
    <todoIndexer filetype="Vue" implementationClass="com.hxz.mpxjs.lang.html.index.VueTodoIndexer"/>

    <codeInsight.parameterInfo language="VueJS" implementationClass="com.intellij.javascript.JSParameterInfoHandler"/>
    <codeInsight.parameterNameHints language="Vue"
                                    implementationClass="com.hxz.mpxjs.editor.VueJSInlayParameterHintsProvider"/>

    <eslint.ruleMappersFactory implementation="com.hxz.mpxjs.libraries.eslint.VueEslintRuleMappersFactory"/>

    <javascript.web.framework id="vue" implementation="com.hxz.mpxjs.web.VueFramework"/>
    <javascript.web.context framework="vue"
                            implementation="com.hxz.mpxjs.context.VueFileContext"
                            id="vue.file"/>
    <javascript.web.context framework="vue" implementation="com.hxz.mpxjs.context.VueLegacyContext"
                            id="vue.legacy" order="last"/>

    <javascript.webTypes source="web-types/vue@1.0.0.web-types.json"/>
    <javascript.webTypes source="web-types/vue@2.0.0.web-types.json"/>
    <javascript.webTypes source="web-types/vue@2.1.0.web-types.json"/>
    <javascript.webTypes source="web-types/vue@2.1.8.web-types.json"/>
    <javascript.webTypes source="web-types/vue@2.2.0.web-types.json"/>
    <javascript.webTypes source="web-types/vue@2.3.0.web-types.json"/>
    <javascript.webTypes source="web-types/vue@2.4.0.web-types.json"/>
    <javascript.webTypes source="web-types/vue@2.5.0.web-types.json"/>
    <javascript.webTypes source="web-types/vue@3.0.0.web-types.json" enableByDefault="true"/>
    <javascript.webTypes source="web-types/vue-i18n@0.0.0.web-types.json"/>

<!--    <javascript.web.additionalContextProvider implementation="com.hxz.mpxjs.web.VueWebSymbolsAdditionalContextProvider" id="vue"/>-->
<!--    <javascript.web.additionalContextProvider implementation="com.hxz.mpxjs.libraries.i18n.VueI18nAdditionalContextProvider" id="vue-i18n"/>-->

    <javascript.web.symbolsFilter name="vue-bind" implementation="com.hxz.mpxjs.web.VueBindFilter"/>
    <javascript.web.symbolCodeCompletionItemCustomizer
      implementation="com.hxz.mpxjs.web.VueWebSymbolsAdditionalContextProvider$VueSymbolsCodeCompletionItemCustomizer"/>

    <mpxjs.templateScopesProvider
      implementation="com.hxz.mpxjs.codeInsight.template.VueStandardSymbolsScopesProvider"
      id="standardSymbols"
      order="before templateElements"/>
    <mpxjs.templateScopesProvider
      implementation="com.hxz.mpxjs.codeInsight.template.VueTemplateElementsScopeProvider"
      id="templateElements"/>
    <mpxjs.templateScopesProvider
      implementation="com.hxz.mpxjs.codeInsight.template.VueContainerScopeProvider"
      id="containerScope"
      order="after templateElements"/>

    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.model.source.VueDefaultContainerInfoProvider"
                                 id="default"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.model.source.VueComponentTemplateInfoProvider"
                                 id="defaultTemplate"
                                 order="after default, before decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.model.source.VueCompositionInfoProvider"
                                 id="composition"
                                 order="after default, before decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.componentDecorator.VueDecoratedComponentInfoProvider"
                                 id="decoratedComponent"
                                 order="after default"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.vuex.model.component.VuexBasicComponentInfoProvider"
                                 id="vuexBasic"
                                 order="after decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.vuex.model.component.VuexDecoratedComponentInfoProvider"
                                 id="vuexDecoratedComponent"
                                 order="after decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.templateLoader.TemplateLoaderComponentInfoProvider"
                                 id="templateLoader"
                                 order="after defaultTemplate"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.vuelidate.VuelidateContainerInfoProvider"
                                 id="vuelidate"
                                 order="after decoratedComponent"/>
<!--    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.nuxt.model.NuxtComponentProvider"-->
<!--                                 id="nuxt"/>-->
<!--    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.cssModules.VueCssModulesInfoProvider"-->
<!--                                 id="css-modules"/>-->

    <lang.documentationProvider implementationClass="com.hxz.mpxjs.codeInsight.documentation.VueDocumentationProvider"
                                language="VueJS"/>
  </extensions>
  <actions>
    <action class="com.hxz.mpxjs.CreateVueSingleFileComponentAction" id="CreateMpxSingleFileComp">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
    </action>
    <action class="com.hxz.mpxjs.intentions.extractComponent.VueExtractComponentAction" id="MpxExtractComponentAction">
      <add-to-group group-id="IntroduceActionsGroup" anchor="last"/>
    </action>
  </actions>

  <extensions defaultExtensionNs="JavaScript">
    <elementScopeProvider implementation="com.hxz.mpxjs.VueElementResolveScopeProvider"/>
    <indexedFileTypeProvider implementation="com.hxz.mpxjs.lang.html.VueIndexedFileTypeProvider"/>

    <frameworkIndexingHandler implementation="com.hxz.mpxjs.index.VueFrameworkHandler" version="13"/>
    <frameworkIndexingHandler implementation="com.hxz.mpxjs.libraries.vuex.index.VuexFrameworkHandler" version="7"/>
    <frameworkIndexingHandler implementation="com.hxz.mpxjs.libraries.templateLoader.TemplateLoaderFrameworkHandler" version="1"/>

    <intentionAndInspectionFilter language="VueJS" implementationClass="com.hxz.mpxjs.inspections.VueInspectionFilter"/>
    <inheritedLanguagesConfigurableProvider language="VueJS"
                                            implementationClass="com.hxz.mpxjs.codeInsight.VueJSLanguageConfigurableProvider"/>
    <dialectSpecificHandlersFactory language="VueJS" implementationClass="com.hxz.mpxjs.codeInsight.VueJSSpecificHandlersFactory"/>
<!--    <frameworkSpecificHandler language="JavaScript"-->
<!--                              implementationClass="com.hxz.mpxjs.libraries.nuxt.codeInsight.NuxtFrameworkSpecificHandler"/>-->
    <frameworkSpecificHandler language="JavaScript"
                              implementationClass="com.hxz.mpxjs.codeInsight.VueFrameworkInsideScriptSpecificHandler"/>
    <frameworkSpecificHandler language="JavaScript"
                              implementationClass="com.hxz.mpxjs.libraries.vuex.codeInsight.VuexFrameworkSpecificHandler"/>
    <analysisHandlersFactory implementationClass="com.hxz.mpxjs.inspections.VueAnalysisHandlersFactory" language="VueJS"/>
    <tsImportResolver implementation="com.hxz.mpxjs.lang.typescript.VueTypeScriptImportsResolverProvider" order="first"/>
    <!--suppress PluginXmlValidity -->
    <languageServiceProvider order="first" implementation="com.hxz.mpxjs.lang.typescript.service.VueLanguageServiceProvider"/>
    <!--suppress PluginXmlValidity -->
<!--    <webpackLocator implementation="com.hxz.mpxjs.cli.VueCliWebpackConfigLocator"/>-->
    <!--suppress PluginXmlValidity -->
<!--    <webpackLocator implementation="com.hxz.mpxjs.libraries.nuxt.codeInsight.NuxtWebpackConfigLocator"/>-->
  </extensions>
</idea-plugin>
